// <auto-generated />
using System;
using Exam.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Exam.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240215105946_addDbInit")]
    partial class addDbInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Exam.Entities.Models.ExamCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("ModifiedAt")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QuestionCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ExamCategories");
                });

            modelBuilder.Entity("Exam.Entities.Models.Examination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int>("ExamCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Examiner")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("ModifiedAt")
                        .HasColumnType("date");

                    b.Property<int>("Point")
                        .HasColumnType("integer");

                    b.Property<int>("RequestCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExamCategoryId");

                    b.ToTable("Examinations");
                });

            modelBuilder.Entity("Exam.Entities.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("CorrectOption")
                        .HasColumnType("text");

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int>("ExamCategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ExcelUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("ModifiedAt")
                        .HasColumnType("date");

                    b.Property<string>("OptionA")
                        .HasColumnType("text");

                    b.Property<string>("OptionB")
                        .HasColumnType("text");

                    b.Property<string>("OptionC")
                        .HasColumnType("text");

                    b.Property<string>("OptionD")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ExamCategoryId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("Exam.Entities.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int>("ExaminationId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("ModifiedAt")
                        .HasColumnType("date");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.Property<bool>("isCorrect")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ExaminationId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("Exam.Entities.Models.Examination", b =>
                {
                    b.HasOne("Exam.Entities.Models.ExamCategory", "ExamCategory")
                        .WithMany()
                        .HasForeignKey("ExamCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamCategory");
                });

            modelBuilder.Entity("Exam.Entities.Models.Question", b =>
                {
                    b.HasOne("Exam.Entities.Models.ExamCategory", "ExamCategory")
                        .WithMany("Questions")
                        .HasForeignKey("ExamCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamCategory");
                });

            modelBuilder.Entity("Exam.Entities.Models.Quiz", b =>
                {
                    b.HasOne("Exam.Entities.Models.Examination", "Examination")
                        .WithMany("Quizzes")
                        .HasForeignKey("ExaminationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam.Entities.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examination");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Exam.Entities.Models.ExamCategory", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("Exam.Entities.Models.Examination", b =>
                {
                    b.Navigation("Quizzes");
                });
#pragma warning restore 612, 618
        }
    }
}
